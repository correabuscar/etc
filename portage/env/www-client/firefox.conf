#it ooms, only when updating @world, with -j18 in cc1plus process! but not when ran alone as # emerge -av firefox  ;; probably because /var/tmp/portage is using too much space and since it's in zram it's using more RAM than when running the emerge -av firefox alone! this is true when 32G RAM!
#MAKEOPTS="${MAKEOPTS} -j12"
#^ not yet tested ^
#64G RAM now:
MAKEOPTS="${MAKEOPTS} -j18"
RUSTFLAGS="${RUSTFLAGS} -C codegen-units=1" #slow compilation but should be faster firefox, https://doc.rust-lang.org/rustc/codegen-options/index.html#codegen-units

#'hardened' use flag already sets this to =3 but it does it before our =2 somehow, so, we try this:
CFLAGS="${CFLAGS} -D_FORTIFY_SOURCE=3"
CXXFLAGS="${CXXFLAGS} -D_FORTIFY_SOURCE=3"
FCFLAGS="${FCFLAGS} -D_FORTIFY_SOURCE=3"
FFLAGS="${FFLAGS} -D_FORTIFY_SOURCE=3"

#XXX: well this line here aka `CARGO_DONT_ERR_ON_CARGO_WARNINGS_MADE_DURING_CARGO_JOBS=1` is actually `declare -- CARGO_DONT_ERR_ON_CARGO_WARNINGS_MADE_DURING_CARGO_JOBS="1"` in /var/tmp/portage/www-client/firefox-123.0/temp/environment  ie. it's not `declare -x` aka export! if this file is: /etc/portage/env/www-client/firefox and thus not specified in /etc/portage/package.env/package.env.ALL in a line like `www-client/firefox firefox.conf` which would look for /etc/portage/env/firefox.conf which presumably had this same line in `CARGO_DONT_ERR_ON_CARGO_WARNINGS_MADE_DURING_CARGO_JOBS=1`, yep in firefox.conf if put it's `declare -x` and thus seen during the compilation!(not so in the former case!)
CARGO_DONT_ERR_ON_CARGO_WARNINGS_MADE_DURING_CARGO_JOBS=1
#^ this is an env. var. that is used in an own patch on rust which causes warnings in 'cargo build --jobs 12'(presumably) esp. those in libssh2-sys to be propagated to parent cargo and thus be seen as cargo warnings and thus be treated as errors and bail out - IFF this var is unset, or set to '0', 'off', etc. then it's disabled aka treat those warnings as errors
#^ that patch is this: /patches/portage/dev-lang/rust.reused/1500_error_on_unused_manifest_key.patch

# 0:10.28 warning: lmdb-rkv-sys@0.11.2:     6 | #define _FORTIFY_SOURCE 2
# 0:10.28 warning: lmdb-rkv-sys@0.11.2:       |         ^
# 0:10.28 warning: lmdb-rkv-sys@0.11.2: <command line>:2:9: note: previous definition is here
# 0:10.28 warning: lmdb-rkv-sys@0.11.2:     2 | #define _FORTIFY_SOURCE 3
# 0:10.28 warning: lmdb-rkv-sys@0.11.2:       |         ^
# 0:10.29 warning: lmdb-rkv-sys@0.11.2: <command line>:7:9: warning: '_FORTIFY_SOURCE' macro redefined [-Wmacro-redefined]
# 0:10.29 warning: lmdb-rkv-sys@0.11.2:     7 | #define _FORTIFY_SOURCE 3
# 0:10.29 warning: lmdb-rkv-sys@0.11.2:       |         ^
# 0:10.29 warning: lmdb-rkv-sys@0.11.2: <command line>:6:9: note: previous definition is here
# 0:10.29 warning: lmdb-rkv-sys@0.11.2:     6 | #define _FORTIFY_SOURCE 2
# 0:10.29 warning: lmdb-rkv-sys@0.11.2:       |         ^
# 0:10.29 warning: lmdb-rkv-sys@0.11.2: 2 warnings generated.
# 0:10.30 error: Treating the above cargo warnings as errors! So this effectively treated any child cargos(or any job_queue things(I honestly don't know what really), like running gcc compiler lookslike) (eg. due to cargo build --jobs 12) having rustc or cargo warnings as cargo warnings in parent - which means compilation of rust from source fails due to libssh2-sys having some warnings like this: warning: libssh2-sys@0.3.0: libssh2/src/hostkey.c:403:5: warning: 'RSA_free' is deprecated: Since OpenSSL 3.0 [-Wdeprecated-declarations]. So considering we don't want this to fail, for now, FIXME: we comment out these two lines in this patch. TODO: find a way to replicate this locally to test and see if a libssh2-sys replica will show cargo warnings in child if new keys are added in its Config.toml!
# 0:10.30 You can prevent this error from exiting by having env var 'CARGO_DONT_ERR_ON_CARGO_WARNINGS_MADE_DURING_CARGO_JOBS' set to any value except any of the following(case insensitive) values(which make it act as if it's unset aka it will err on warnings): "0", "off", "no", "disabled", "err", "error"
# 0:10.30 warning: build failed, waiting for other jobs to finish...
#
#FIXME: next up, we wanna avoid this:
#8 0:27.98 gmake[4]: Leaving directory '/var/tmp/portage/www-client/firefox-127.0.2/work/firefox_build/mozglue/build'
#8 0:27.98 warning: /var/tmp/portage/www-client/firefox-127.0.2/work/firefox-127.0.2/toolkit/components/bitsdownload/bits_client/Cargo.toml: `default_features` is deprecated in favor of `default-features` and will not work in the 2024 edition
#8 0:27.99 (in the `regex` dependency)
#8 0:27.99 warning: /var/tmp/portage/www-client/firefox-127.0.2/work/firefox-127.0.2/toolkit/library/rust/shared/Cargo.toml: `default_features` is deprecated in favor of `default-features` and will not work in the 2024 edition
#8 0:27.99 (in the `audio_thread_priority` dependency)
#8 0:28.00 error: Compilation failed due to cargo warnings! Manually done this(via cargo patch) so that things like the following (ie. dep key packages= and using rust pre 1.26.0 which ignores it, downloads squatted package) will be avoided in the future: https://github.com/rust-lang/rust/security/advisories/GHSA-phjm-8x66-qw4r
#8 0:28.00 gmake[4]: *** [/var/tmp/portage/www-client/firefox-127.0.2/work/firefox-127.0.2/config/makefiles/rust.mk:498: force-cargo-library-build] Error 101
#TODO: so mod the patch /patches/portage/dev-lang/rust.reused/1500_error_on_unused_manifest_key_1_79_0.patch to add proper env.var.
CARGO_DONT_ERR_ON_CARGO_WARNINGS_MADE_INSIDE_WORKSPACE_RS=1
#XXX: not yet this too: so keeping on 0
CARGO_DONT_ERR_ON_CARGO_WARNINGS_MADE_INSIDE_RESOLVE_RS=0

