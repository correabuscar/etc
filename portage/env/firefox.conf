#it ooms, only when updating @world, with -j18 in cc1plus process! but not when ran alone as # emerge -av firefox  ;; probably because /var/tmp/portage is using too much space and since it's in zram it's using more RAM than when running the emerge -av firefox alone! this is true when 32G RAM!
#MAKEOPTS="${MAKEOPTS} -j12"
#^ not yet tested ^
#64G RAM now:
MAKEOPTS="${MAKEOPTS} -j18"

#'hardened' use flag already sets this to =3 but it does it before our =2 somehow, so, we try this:
CFLAGS="${CFLAGS} -D_FORTIFY_SOURCE=3"
CXXFLAGS="${CXXFLAGS} -D_FORTIFY_SOURCE=3"
FCFLAGS="${FCFLAGS} -D_FORTIFY_SOURCE=3"
FFLAGS="${FFLAGS} -D_FORTIFY_SOURCE=3"

CARGO_DONT_ERR_ON_CARGO_WARNINGS_MADE_DURING_CARGO_JOBS=1
#^ this is an env. var. that is used in an own patch on rust which causes warnings in 'cargo build --jobs 12'(presumably) esp. those in libssh2-sys to be propagated to parent cargo and thus be seen as cargo warnings and thus be treated as errors and bail out - IFF this var is unset, or set to '0', 'off', etc. then it's disabled aka treat those warnings as errors
#^ that patch is this: /patches/portage/dev-lang/rust.reused/1500_error_on_unused_manifest_key.patch

# 0:10.28 warning: lmdb-rkv-sys@0.11.2:     6 | #define _FORTIFY_SOURCE 2
# 0:10.28 warning: lmdb-rkv-sys@0.11.2:       |         ^
# 0:10.28 warning: lmdb-rkv-sys@0.11.2: <command line>:2:9: note: previous definition is here
# 0:10.28 warning: lmdb-rkv-sys@0.11.2:     2 | #define _FORTIFY_SOURCE 3
# 0:10.28 warning: lmdb-rkv-sys@0.11.2:       |         ^
# 0:10.29 warning: lmdb-rkv-sys@0.11.2: <command line>:7:9: warning: '_FORTIFY_SOURCE' macro redefined [-Wmacro-redefined]
# 0:10.29 warning: lmdb-rkv-sys@0.11.2:     7 | #define _FORTIFY_SOURCE 3
# 0:10.29 warning: lmdb-rkv-sys@0.11.2:       |         ^
# 0:10.29 warning: lmdb-rkv-sys@0.11.2: <command line>:6:9: note: previous definition is here
# 0:10.29 warning: lmdb-rkv-sys@0.11.2:     6 | #define _FORTIFY_SOURCE 2
# 0:10.29 warning: lmdb-rkv-sys@0.11.2:       |         ^
# 0:10.29 warning: lmdb-rkv-sys@0.11.2: 2 warnings generated.
# 0:10.30 error: Treating the above cargo warnings as errors! So this effectively treated any child cargos(or any job_queue things(I honestly don't know what really), like running gcc compiler lookslike) (eg. due to cargo build --jobs 12) having rustc or cargo warnings as cargo warnings in parent - which means compilation of rust from source fails due to libssh2-sys having some warnings like this: warning: libssh2-sys@0.3.0: libssh2/src/hostkey.c:403:5: warning: 'RSA_free' is deprecated: Since OpenSSL 3.0 [-Wdeprecated-declarations]. So considering we don't want this to fail, for now, FIXME: we comment out these two lines in this patch. TODO: find a way to replicate this locally to test and see if a libssh2-sys replica will show cargo warnings in child if new keys are added in its Config.toml!
# 0:10.30 You can prevent this error from exiting by having env var 'CARGO_DONT_ERR_ON_CARGO_WARNINGS_MADE_DURING_CARGO_JOBS' set to any value except any of the following(case insensitive) values(which make it act as if it's unset aka it will err on warnings): "0", "off", "no", "disabled", "err", "error"
# 0:10.30 warning: build failed, waiting for other jobs to finish...
