#!/bin/bash
# XXX this $0 aka /etc/dnsmasq.d/dnsmasq_noPTR_generator.bash filename/path is used in /var/db/repos/localrepo/www-client/firefox-user-js/firefox-user-js-1.ebuild so changing it means having to change it there also!
#also referenced in ./rme.txt

##must be before re-run as root! nvm!
#echo "$-" #it's 'hB' even so, I guess interactive means I'm executing these commands at command line or wtf.
#if ! [[ $- == *i* ]]; then
#  #not running interactive, assume no diff
#  if test -n "$DEBUG" -a "0$DEBUG" != "00"; then
#    echo "Not running interactive, assuming nodiff" >&2
#  fi
#  set -- "nodiff"
#fi

#set -xv
#id
source "/swcode/swcode.bash"
rerunasroot "$@"
#^ the above 2 lines were 1 line due to paste and I was wondering why it wasn't getting root! maybe I should always end lines with ';' so this way such copy/pastes will work regardless!




function print_all_the_hostnames() {
  print_all_hostnames_from_etc_hosts
  print_all_the_ff_hostnames
}

#XXX: this func/code is duplicated(and not needed to run here(and yet it's still ran hmm, 19jun2024), but keeping it because due to 'sort' it's ok) in /etc/hosts.d.gen/gen_ffblocks.bash
function print_all_the_ff_hostnames() {
  allffhosts=(firefoxhelloooooowoooorl.clock firefox_blocked_domain.tld)
  res="("
  first=1
  for h in "${allffhosts[@]}"; do
    if test "$first" == "1"; then
      first="0"
      res+="${h}"
    else
      res+="|${h}"
    fi
  done
  res+=")"
  cat /usr/lib64/firefox/browser/defaults/preferences/vendor.js /patches/portage/www-client/firefox.reused/*.patch | grep -Ew "$res" | sed -re 's/^.*:\/\/([0-9A-Za-z_\.-]*'"$res"').*$/\1/' | sort -u
  #TODO: ensure only valid hostname chars (eg. no spaces/tabs) are in the resulting output list!
}

#print_all_the_ff_hostnames
#exit

function print_all_hostnames_from_etc_hosts() {
  cat /etc/hosts /etc/hosts.dnsmasq | grep -v '^\s*#'|grep -v '^\s*$'|sed -re 's/^[0-9.: \t]+//'|sed -re 's/[[:space:]]+/ /g'|tr ' ' '\n'|sort -u
}

function main() {

if test "$1" != "nodiff"; then
  if which colordiff; then
    diff=colordiff
    if test -n "$DEBUG" -a "0$DEBUG" != "00"; then
      echo "Using '$diff'" >&2
    fi
  else
    diff=diff
  fi
fi

destfile="/etc/dnsmasq.d/noPTRrequestsforetchosts.conf"
tmpfile="$(mktemp --tmpdir="/tmp" -t -- "noPTRrequestsforetchosts_conf_XXXXXXXXXX_$(date --iso-8601=ns|tr ':,+' '_')")"
if test -n "$DEBUG" -a "0$DEBUG" != "00"; then
  echo "Using temp file '$tmpfile'" >&2
fi
#date --iso-8601=ns|tr ':,+' '_' is like 2021-06-10T00_15_51_904809374_02_00

set -e
cat > "$tmpfile" <<EOF
#autogenerated by '$0' script (should be in same dir as this very file which is named '$destfile') on `date`
#
#without this dnsmasq config addition, dnsmasq would forward PTR requests to upstream dns server for any hostname already defined in /etc/hosts (and ofc, any other hostname) when used in 'iptables' context(so not for 'ping' which won't, obv.) eg. host "hi" in this command: "$ sudo iptables -A OUTPUT -p tcp --dport 1111 -d hi -j ACCEPT"  will cause "PTR? hi." request to 1.1.1.1 (seen by "$ sudo tcpdump dst port 53") when "nameservrr 1.1.1.1" is used in /etc/resolv.conf.fordnsmasq
#
#this config should be already included in /etc/dnsmasq.conf (on Gentoo) via line "conf-dir=/etc/dnsmasq.d/,*.conf"
#
# any changes to this file require a dnsmasq service 'restart' (a 'reload' isn't enough, for some reason!) ergo, do: # rc-service dnsmasq restart
#
#if these hostnames exist in /etc/hosts then they will resolve to those IPs listed there, otherwise they will NXDOMAIN even if they exist upstream ie. "config that_hostname is NXDOMAIN" in dnsmasq log! (TODO: recheck this, maybe this happens now because I'm offline/unplugged LAN cable) yeah this should be true, for all other hosts(not in /etc/hosts either) it will give NODATA-IPv4 (and NODATA-IPv6) if LAN cable is unplugged.
#
#FIXME: if you have a line like "server=/mozilla.org/" (or address=/mozilla.org/ it's the same and applies as well!) it will disallow all subdomains like addons.mozilla.org too ! Find some way to avoid that. On the other hand this is a feature I could use: "server=/firefox_blocked_domain.tld/"
#from man 8 dnsmasq:
#              More  specific  domains  take  precedence over less specific do‐
#              mains,             so:              --server=/google.com/1.2.3.4
#              --server=/www.google.com/2.3.4.5    will    send   queries   for
#              *.google.com to 1.2.3.4, except *www.google.com, which  will  go
#              to 2.3.4.5
#              The   special  server  address  '#'  means,  "use  the  standard
#              servers",            so             --server=/google.com/1.2.3.4
#              --server=/www.google.com/# will send queries for *.google.com to
#              1.2.3.4, except  *www.google.com  which  will  be  forwarded  as
#              usual.
#
#From my xp,  dnsmasq[35719]: started, version 2.90 , using either server=/domain/ or address=/domain/ will block the same way:
#Jun 19 08:25:15 dnsmasq[35719]: 1 127.0.0.1/53493 query[A] accounts.firefox.com from 127.0.0.1
#Jun 19 08:25:15 dnsmasq[35719]: 1 127.0.0.1/53493 config accounts.firefox.com is NXDOMAIN
#Jun 19 08:25:15 dnsmasq[35719]: 2 127.0.0.1/53493 query[AAAA] accounts.firefox.com from 127.0.0.1
#Jun 19 08:25:15 dnsmasq[35719]: 2 127.0.0.1/53493 config accounts.firefox.com is NXDOMAIN
#but using address=/domain/0.0.0.0 is worse and to be avoided:
#Jun 19 08:27:17 dnsmasq[36209]: 1 127.0.0.1/55571 query[A] accounts.firefox.com from 127.0.0.1
#Jun 19 08:27:17 dnsmasq[36209]: 1 127.0.0.1/55571 config accounts.firefox.com is 0.0.0.0
#Jun 19 08:27:17 dnsmasq[36209]: 2 127.0.0.1/55571 query[AAAA] accounts.firefox.com from 127.0.0.1
#Jun 19 08:27:17 dnsmasq[36209]: Conntrack connection mark retrieval failed: No such file or directory
#Jun 19 08:27:17 dnsmasq[36209]: 2 127.0.0.1/55571 forwarded accounts.firefox.com to 45.90.30.0
#Jun 19 08:27:17 dnsmasq[36209]: 2 127.0.0.1/55571 reply accounts.firefox.com is NODATA-IPv6
#and with server=/domain/0.0.0.0 it's effectively allowed so the worst:
#Jun 19 08:27:47 dnsmasq[36305]: 1 127.0.0.1/34502 query[A] accounts.firefox.com from 127.0.0.1
#Jun 19 08:27:47 dnsmasq[36305]: Conntrack connection mark retrieval failed: No such file or directory
#Jun 19 08:27:47 dnsmasq[36305]: 1 127.0.0.1/34502 forwarded accounts.firefox.com to 45.90.30.0
#Jun 19 08:27:47 dnsmasq[36305]: 2 127.0.0.1/34502 query[AAAA] accounts.firefox.com from 127.0.0.1
#Jun 19 08:27:47 dnsmasq[36305]: 2 127.0.0.1/34502 forwarded accounts.firefox.com to 45.90.30.0
#Jun 19 08:27:47 dnsmasq[36305]: 1 127.0.0.1/34502 reply accounts.firefox.com is 34.110.207.168
#Jun 19 08:27:47 dnsmasq[36305]: 2 127.0.0.1/34502 reply accounts.firefox.com is NODATA-IPv6
#Jun 19 08:27:47 dnsmasq[36305]: 3 127.0.0.1/38309 query[PTR] 168.207.110.34.in-addr.arpa from 127.0.0.1
#Jun 19 08:27:47 dnsmasq[36305]: 3 127.0.0.1/38309 forwarded 168.207.110.34.in-addr.arpa to 45.90.30.0
#Jun 19 08:27:47 dnsmasq[36305]: 3 127.0.0.1/38309 reply 34.110.207.168 is 168.207.110.34.bc.googleusercontent.com
EOF
set +e


set -e
echo 'server=/hi/' >> "$tmpfile"
echo 'server=/firefox_blocked_domain.tld/' >> "$tmpfile"
echo '#^ all subdomains like something.firefox_blocked_domain.tld will be blocked! this is how it works! FIXME: this may not be wanted for addons.mozilla.org even though you have only "server=/mozilla.org/"'
print_all_the_hostnames | sed -re 's|^(.*)$|server=/\1/|' >> "$tmpfile"
echo "# all done" >> "$tmpfile"
set +e
if test "$1" != "nodiff"; then
  "$diff" -up -- "$destfile" "$tmpfile" | less
fi
set -e
#Overwrite current, ACID-like:
mv -- "$tmpfile" "$destfile"
#^ used temp file so that resulting output file won't be garbled
#^ used lockedcall for the same reason + extra safety
rc-service dnsmasq restart
#^ FIXME: uncomment above!
set +e

echo "All good! '$destfile' (re)generated."
} #main

lockedcall 300 main "$@"
