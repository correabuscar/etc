app-emulation/qemu python filecaps -xfs -xen xattr vte vnc virtfs vhost-net -vde uuid -usbredir -usb gnutls tls threads -tci -systemtap -static-user -static-softmmu -static -ssh -spice -snappy -smartcard seccomp sdl sdl2 -sasl -rbd pulseaudio png pin-upstream-blobs opengl -numa -nls -nfs ncurses lzo jpeg -iscsi -infiniband gtk2 gtk -glusterfs fdt -debug -curl caps -bluetooth -alsa aio -accessibility qemu_user_targets_x86_64 qemu_softmmu_targets_x86_64 qemu_user_targets_arm qemu_softmmu_targets_arm qemu_user_targets_aarch64 qemu_softmmu_targets_aarch64

#10 may 2021: added 'nls', nope not needed!

#XXX: 11 may 2016
#toggled to: vte gtk gtk2 lzo sdl virtfs
#added: gnutls qemu_user_targets_x86_64 sdl2

#XXX: too slow? maybe try with tci enabled, see if it speeds up or down

#26feb2024: -curl Support ISOs / -cdrom directives via HTTP or HTTPS.

#28 march 2024: for running rust programs in qemu (not tested yet, estimating)
# - - qemu_user_targets_arm             : ARM (little endian) userspace emulation target
# - - qemu_softmmu_targets_arm          : system emulation target
# qemu_softmmu_targets_x86_64 was already on even tho it wasn't specified, adding it anyway.
# well looks like that's 32bits? so I want
# qemu_user_targets_aarch64         : ARM64 userspace emulation target
# qemu_softmmu_targets_aarch64
# but not the BE variants:
# qemu_user_targets_aarch64_be      : ARM64 big endian userspace emulation target
# qemu_user_targets_armeb           : ARM (big endian) userspace emulation target
