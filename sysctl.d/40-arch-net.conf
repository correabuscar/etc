#
## Do not accept source routing
#both gentoo and arch default =0 aka false, this is a bool! but there's another that's integer and it's only applied for interfaces eg. net.ipv4.conf.*.accept_source_route=-1 should be disabled, done in script 50-*.conf
net.ipv4.conf.default.accept_source_route = 0
net.ipv4.conf.all.accept_source_route = 0


# Promote secondary addresses when the primary address is removed
# =1 on arch, =0 on gentoo
net.ipv4.conf.default.promote_secondaries = 1
net.ipv4.conf.*.promote_secondaries = 1
net.ipv4.conf.all.promote_secondaries = 1
#promote_secondaries - BOOLEAN
#  When a primary IP address is removed from this interface
#  promote a corresponding secondary IP address instead of
#  removing all the corresponding secondary IP addresses.
#  src: linux-stable/Documentation/networking/ip-sysctl.rst


# ping(8) without CAP_NET_ADMIN and CAP_NET_RAW
# The upper limit is set to 2^31-1. Values greater than that get rejected by
# the kernel because of this definition in linux/include/net/ping.h:
#   #define GID_T_MAX (((gid_t)~0U) >> 1)
# That's not so bad because values between 2^31 and 2^32-1 are reserved on
# systemd-based systems anyway: https://systemd.io/UIDS-GIDS.html#summary
#net.ipv4.ping_group_range = 0 2147483647
#^ that's archlinux default
#this is gentoo default:
net.ipv4.ping_group_range = 1	0
#ping_group_range - 2 INTEGERS
#  Restrict ICMP_PROTO datagram sockets to users in the group range.
#  The default is "1 0", meaning, that nobody (not even root) may
#  create ping sockets.  Setting it to "100 100" would grant permissions
#  to the single group. "0 4294967295" would enable it for the world, "100
#  4294967295" would enable it for the users, but not daemons.

#that '1 0' still allows root and user to ping eg. 1.1.1.1, so maybe I don't understand something. FIXME: has no effect

# Fair Queue CoDel packet scheduler to fight bufferbloat
net.core.default_qdisc = fq_codel
#both arch and gentoo had 'fq_codel' already, ie. default! (maybe kernel settings?!)
#default_qdisc                                                                   
#-------------
#
#The default queuing discipline to use for network devices. This allows
#overriding the default of pfifo_fast with an alternative. Since the default
#queuing discipline is created without additional parameters so is best suited
#to queuing disciplines that work well without configuration like stochastic
#fair queue (sfq), CoDel (codel) or fair queue CoDel (fq_codel). Don't use
#queuing disciplines like Hierarchical Token Bucket or Deficit Round Robin
#which require setting up classes and bandwidths. Note that physical multiqueue
#interfaces still use mq as root qdisc, which in turn uses this default for its
#leaves. Virtual devices (like e.g. lo or veth) ignore this setting and instead
#default to noqueue.
#
#Default: pfifo_fast

