#!/bin/bash

#repodir="/usr/portage"  #old, now changed to:
repodir="/var/db/repos/gentoo"
eclassesdir="${repodir}/eclass" #TODO: see if this is setable in make.conf or what?
eclass_overrides_rootdir="/eclasses_override" #that's due to a portage patch!
eclass_overrides_dir="${eclass_overrides_rootdir}/eclass" #that's due to a portage patch!
backuprootdir="${eclass_overrides_rootdir}/backups"
warnfile="${eclass_overrides_rootdir}/WARNING.txt"
patchesdir="/patches/eclasses"

#echo "!! actually no longer needing '$0' because using /var/db/repos/localrepo means I'm manually adding/updating ebuilds (and only there in that repo, not in gentoo, ever)" >&2
#exit 1
#XXX: ok still needing this for patching eclasses! that's $repodir/eclass/*.eclass files!

if test "$(id -nu)" != "root"; then
  echo "!! Script executed as non-root user '$(id -nu)'. Exiting early..." >&2
  exit 1
fi

#set -e
#pushd /
mkdir -p -- "$backuprootdir"  #we are root, right?
backupasdir="$(mktemp --dry-run --tmpdir="$backuprootdir" -- $(date --iso-8601=ns|tr ':,+' '_')_XXXXXXXXXX)"
if test "$backupasdir" == "/" -o -z "$backupasdir"; then   #in case I remove the trailing / from $backupasdir (oh sneap, I just did!)
  echo "failed to 'mktemp'(is the command existing?)" >&2
  exit 1
fi
mv -i --no-target-directory -- "$eclass_overrides_dir" "$backupasdir"
mkdir -p -- "$eclass_overrides_dir"  #we are root, right?

if ! test -f "$warnfile"; then
  set -e
  echo "The dir '$eclass_overrides_dir' is removed(/renamed) upon every emerge --sync by script '$0'(aka(hardcoded): /etc/portage/postsync.d/10_eclasses_patching ) which is copying the modified/patched eclasses from '$eclassesdir' and applying the patches for them from dir '$patchesdir'.(which .eclass files get copied depends on the referenced .eclass files inside the .patch files!)" > "$warnfile"
  echo "This .txt file was auto-generated by '$0' because it didn't already exist as a file. So don't modify it or changes would be lost!" >> "$warnfile"
  set +e
fi
#pushd "${eclassesdir}/"
pushd "${eclass_overrides_dir}"

#get all the .eclass filenames (they are abs paths already, assumed! else -Np6 for 'patch' would also need to be changed!)
#FIXME: this(below) cannot handle filenames/paths with whitespace !! (it'd at least require -f2- for the 'cut' and also not using 'for' !)
bail=0
for filetopatch in $(find "$patchesdir" -name \*.patch -print0|xargs -P1 -0 -- grep -h '^+++' -- |cut -f2 -d ' ' | sort -u ) ; do
  #cp -a --target-directory="$eclass_overrides_dir" -- "${eclassesdir}/${filetopatch}"
#  if test -f "${filetopatch}"; then  #FIXME wrong path!
#    echo "!! file '${filetopatch}' shouldn't already exist! Bad coding?!" >&2
#    exit 1
#  fi
  #-i to ask for overwrite, because it shouldn't ever happen (due to 'sort -u' above)
  cp -i -a --target-directory="$eclass_overrides_dir" -- "${filetopatch}" ; ec="$?"
  if test "$ec" -ne "0"; then
    echo "!! copying file '$filetopatch' failed with exit code '$ec'" >&2
    bail="$ec"
  fi
done

if test "$bail" -ne "0"; then
  echo "!! exiting due to the above error(s)" >&2
  exit "$bail"
fi


#(
#these are patches to ebuild files which are to be applied right after the `emerge --sync` (previously `emerge-webrsync`) finished updating the repodir.
#note: there may not be any patches to apply!
#TODO: patch filenames with whitespace ?!!!
eec="0"
for i in $(find "$patchesdir" -name \*.patch) ; do 
  echo "Applying '$i' for PWD=`pwd`" >&2
  patch --version-control=numbered -Np6 -i "$i" ; ec="$?"
  #--version-control=never  is needed so that no .orig files are created! this was needed when dir was in /var/db/repos/gentoo/eclass/  or else the gemato checking would fail due to new files in dir!
  #--reject-file=-  to not create .rej files!
  if test "$ec" -ne "0"; then
    echo "FAILED! patch: '$i'" | grep --color=tty "FAIL" 1>&2
    if test "0" -eq "$eec"; then
      #we'll exit later with this first bad exit code
      eec="$ec"
    fi
  fi
done
#)

#get chromium required disk space down from 25G to 15G (14G required; with du -c -s --si -P after compiled but killed when ld-ing, and exe is over 3G so, might be more needed!)
#ok after 'Completed installing' emerge msg, I measured(with the above df) 21G
#CHECKREQS_DISK_BUILD="25G"
#/usr/portage/www-client/chromium/chromium-*.ebuild
#sed -e 's/CHECKREQS_DISK_BUILD="25G"/CHECKREQS_DISK_BUILD="22G"/g' --in-place -- ${repodir}/www-client/chromium/chromium-*.ebuild
#^ commented out because it might be outdated TODO
#removed .sed backups! aka  --in-place=.sed

#sed -e 's/cryptsetup,//g' --in-place -- ${repodir}/sys-fs/udisks/udisks-2.8.4.ebuild
#sed -e 's/cryptsetup,//g' --in-place -- $(ls -1 "${repodir}/sys-fs/udisks/udisks-"*".ebuild" |sort -d|tail -n1)
#^ not needed anymore, due to USE=-mount

popd
#:
exit "$eec"
