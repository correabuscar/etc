#on T400:
#TODO: see why this happens twice on 'tlp start': acpi_call: Cannot get handle: Error: AE_NOT_FOUND
#the only Bad is:
#Bad           VM writeback timeout
#that's because cat /proc/sys/vm/dirty_writeback_centisecs  reports 60000 as set below!
#Note:
#Fan gets to 0rpm and 40degC is max (24 and 32 is also seen on other temps)
#Note: Xfce Power Manager reports 'Charging' when it isn't: https://github.com/linrunner/TLP/issues/216

#on Z575:
#not yet tested!

# ------------------------------------------------------------------------------
# tlp - Parameters for power saving
# See full explanation: https://linrunner.de/en/tlp/docs/tlp-configuration.html

# Notes:
# - Some parameters are disabled, remove the leading '#' to enable # them;
#   shown values are suggestions not defaults
# - Default *: intrinsic default that is effective when the parameter is missing
#   or disabled by a leading '#'; use PARAM="" to disable intrinsic defaults for
#   parameters with text string values
# - Default <none>: do nothing or use kernel/hardware defaults


# Set to 0 to disable, 1 to enable TLP.
# Default: 0
TLP_ENABLE=1
#TLP_ENABLE=0

# Operation mode when no power supply can be detected: AC, BAT.
# Concerns some desktop and embedded hardware only.
# Default: <none>
TLP_DEFAULT_MODE=AC

# Operation mode select: 0=depend on power source, 1=always use TLP_DEFAULT_MODE
# Hint: use in conjunction with TLP_DEFAULT_MODE=BAT for BAT settings on AC.
# Default: 0
TLP_PERSISTENT_DEFAULT=0


# Seconds laptop mode has to wait after the disk goes idle before doing a sync.
# Non-zero value enables, zero disables laptop mode.
# Default: 0 (AC), 2 (BAT)
#DISK_IDLE_SECS_ON_AC=0
#DISK_IDLE_SECS_ON_BAT=2
# XXX: overrides any sysctl settings in /etc/sysctl.d/10_delay_writes.conf like: vm.dirty_writeback_centisecs and vm.dirty_expire_centisecs XXX: now 04.03.2019 unsure if these DISK_IDLE_SECS_ON_AC/BAT affect those sysctl settings too or only MAX_LOST_WORK_SECS_ON_AC/BAT do.
#DISK_IDLE_SECS_ON_AC=600
#DISK_IDLE_SECS_ON_BAT=60
#Setting these low to avoid 0 byte files on btrfs due to some random system freeze/crash(unrelated to the freze that le9d.patch fixes):
DISK_IDLE_SECS_ON_AC=0
DISK_IDLE_SECS_ON_BAT=2

# Dirty page values (timeouts in secs).
# Default: 15 (AC + BAT)
#MAX_LOST_WORK_SECS_ON_AC=15
#MAX_LOST_WORK_SECS_ON_BAT=60
# 10min for AC, 1 min for battery
#MAX_LOST_WORK_SECS_ON_AC=600
#MAX_LOST_WORK_SECS_ON_BAT=60
#Setting these low to avoid 0 bytes files on btrfs due to some random system freeze/crash:
#MAX_LOST_WORK_SECS_ON_AC=10
#MAX_LOST_WORK_SECS_ON_BAT=10
#XXX: not setting these ^ because they overwrite the values set by /etc/sysctl.d/10_delay_writes.conf  #XXX ok, not setting them is setting them to 15 sec !
#$ sudo sysctl -a |grep -w 1500
#vm.dirty_expire_centisecs = 1500
#vm.dirty_writeback_centisecs = 1500
MAX_LOST_WORK_SECS_ON_AC=0
MAX_LOST_WORK_SECS_ON_BAT=0
#XXX: ok, setting these to zero makes tlp not set them at all, which means the values from /etc/sysctl.d/10_delay_writes.conf remain!

# Note: CPU parameters below are disabled by default, remove the leading #
# to enable them, otherwise kernel defaults will be used.

# Select a CPU frequency scaling governor.
# Intel Core i processor with intel_pstate driver:
#   powersave(*), performance.
# Other hardware with acpi-cpufreq driver:
#   ondemand(*), powersave, performance, conservative, schedutil.
# (*) is recommended.
# Use tlp-stat -p to show the active driver and available governors.
# Important:
#   powersave for intel_pstate and ondemand for acpi-cpufreq are power
#   efficient for *almost all* workloads and therefore kernel and most
#   distributions have chosen them as defaults. If you still want to change,
#   you should know what you're doing! You *must* disable your distribution's
#   governor settings or conflicts will occur.
# Default: <none>
#CPU_SCALING_GOVERNOR_ON_AC=powersave
#CPU_SCALING_GOVERNOR_ON_BAT=powersave

# Set the min/max frequency available for the scaling governor.
# Possible values depend on your CPU. For available frequencies see
# the output of tlp-stat -p.
# Default: <none>
#CPU_SCALING_MIN_FREQ_ON_AC=0
#CPU_SCALING_MAX_FREQ_ON_AC=0
#CPU_SCALING_MIN_FREQ_ON_BAT=0
#CPU_SCALING_MAX_FREQ_ON_BAT=0
#
#CPU_SCALING_MIN_FREQ_ON_AC=800000
#CPU_SCALING_MAX_FREQ_ON_AC=800000
#CPU_SCALING_MIN_FREQ_ON_BAT=800000
#CPU_SCALING_MAX_FREQ_ON_BAT=800000
#^ at lowest when cpuvary isn't running! else risk temperature above thrashold!! Actually doing this via cpumax.service instead! so that I can disable it on the intel computer.

# //Set energy performance hints (HWP) for Intel P-state governor:
# Set Intel CPU energy/performance policies HWP.EPP and EPB:
#   performance, balance_performance, default, balance_power, power
# Values are given in order of increasing power saving.
# //Note: Intel Skylake or newer CPU and Kernel >= 4.10 required.
# Notes:
# - Requires an Intel Core i processor
# - HWP.EPP requires kernel 4.10 and intel_pstate driver
# - EPB requires kernel 5.2 or module msr and x86_energy_perf_policy
#   from linux-tools
# - When HWP.EPP is available, EPB is not set
# Default: <none>
#CPU_HWP_ON_AC=balance_performance
#CPU_HWP_ON_BAT=balance_power
#^ got renamed to:
#CPU_ENERGY_PERF_POLICY_ON_AC=balance_performance
#CPU_ENERGY_PERF_POLICY_ON_BAT=power
#doneTODO: set these instead, on i87k:
#CPU_ENERGY_PERF_POLICY_ON_AC=balance_performance
#CPU_ENERGY_PERF_POLICY_ON_BAT=balance_power
#^ disabled on Z575
CPU_ENERGY_PERF_POLICY_ON_AC=balance_performance
CPU_ENERGY_PERF_POLICY_ON_BAT=balance_power


# //Set Intel P-state performance: 0..100 (%).
# Set Intel CPU P-state performance: 0..100 (%).
# Limit the max/min P-state to control the power dissipation of the CPU.
# Values are stated as a percentage of the available performance.
# Requires an Intel Core i processor with intel_pstate driver.
# Default: <none>
#CPU_MIN_PERF_ON_AC=0
#CPU_MAX_PERF_ON_AC=100
#CPU_MIN_PERF_ON_BAT=0
#CPU_MAX_PERF_ON_BAT=30

# Set the CPU "turbo boost" feature: 0=disable, 1=allow
# Requires an Intel Core i processor.
# Important:
# - This may conflict with your distribution's governor settings
# - A value of 1 does *not* activate boosting, it just allows it
# Default: <none>
#CPU_BOOST_ON_AC=1
#CPU_BOOST_ON_BAT=0

# Minimize number of used CPU cores/hyper-threads under light load conditions:
#   0=disable, 1=enable.
# Default: <none>
SCHED_POWERSAVE_ON_AC=0
SCHED_POWERSAVE_ON_BAT=1

# Kernel NMI Watchdog:
#   0=disable (default, saves power), 1=enable (for kernel debugging only).
# Default: <none>
NMI_WATCHDOG=0

# Change CPU voltages aka "undervolting" - Kernel with PHC patch required.
# Frequency voltage pairs are written to:
#   /sys/devices/system/cpu/cpu0/cpufreq/phc_controls
# CAUTION: only use this, if you thoroughly understand what you are doing!
# Default: <none>.
#PHC_CONTROLS="F:V F:V F:V F:V"

# //Set CPU performance versus energy savings policy:
# //  performance, balance-performance, default, balance-power, power.
#// Values are given in order of increasing power saving.
#// Requires kernel module msr and x86_energy_perf_policy from linux-tools.
#// Default: <none>
#//ENERGY_PERF_POLICY_ON_AC=performance
#//ENERGY_PERF_POLICY_ON_BAT=power
#
#//ENERGY_PERF_POLICY_ON_AC=balance-performance
#//ENERGY_PERF_POLICY_ON_BAT=power
#doneTODO: change the AC one to balance-performance on intel computer
#XXX ^ on Z575 x86_energy_perf_policy says unsupported CPU
#XXX: 02sept2019(or earlier upstream): these ^ got removed and replaced by CPU_ENERGY_PERF_POLICY_ON_AC which is intel only!

# Disk devices; separate multiple devices with spaces.
# Devices can be specified by disk ID also (lookup with: tlp diskid).
# Note: DISK parameters below are effective only when this option is configured.
# Default: "nvme0n1 sda"
#DISK_DEVICES="nvme0n1 sda"
DISK_DEVICES="sda sdb sdc"

# Disk advanced power management level: 1..254, 255 (max saving, min, off).
# Levels 1..127 may spin down the disk; 255 allowable on most drives.
# Separate values for multiple disks with spaces. Use the special value 'keep'
# to keep the hardware default for the particular disk.
# Default: <none>
#DISK_APM_LEVEL_ON_AC="254 254"
#DISK_APM_LEVEL_ON_BAT="128 128"
#DISK_APM_LEVEL_ON_AC="keep"
#DISK_APM_LEVEL_ON_BAT="keep"

# Hard disk spin down timeout:
#   0:        spin down disabled
#   1..240:   timeouts from 5s to 20min (in units of 5s)
#   241..251: timeouts from 30min to 5.5 hours (in units of 30min)
# See 'man hdparm' for details.
# Separate values for multiple disks with spaces. Use the special value 'keep'
# to keep the hardware default for the particular disk.
# Default: <none>
#DISK_SPINDOWN_TIMEOUT_ON_AC="240 240"
#DISK_SPINDOWN_TIMEOUT_ON_BAT="12 12"
#^12=60 sec
#DISK_SPINDOWN_TIMEOUT_ON_AC="keep"
#DISK_SPINDOWN_TIMEOUT_ON_BAT="keep"

# Select I/O scheduler for the disk devices.
# Multi queue (blk-mq) schedulers:
#   mq-deadline(*), none, kyber, bfq
# Single queue schedulers:
#   deadline(*), cfq, bfq, noop
# (*) recommended.
# Separate values for multiple disks with spaces. Use the special value 'keep'
# to keep the kernel default scheduler for the particular disk.
# Notes:
# - Multi queue (blk-mq) may need kernel boot option 'scsi_mod.use_blk_mq=1'
#   and 'modprobe mq-deadline-iosched|kyber|bfq' on kernels < 5.0
# - Single queue schedulers are legacy now and were removed together with
#   the old block layer in kernel 5.0
# Default: keep
#DISK_IOSCHED="mq-deadline mq-deadline"
#XXX: actually choosing cfq (for tests) on 03 june 2018:
#DISK_IOSCHED="cfq cfq"
#nvm, back to noop, on 9 june 2018:
#DISK_IOSCHED="noop noop"
#XXX: also see /etc/udev/rules.d/60-schedulers.rules and I don't know which is first, probably tlp overrides that, yup it does! so I'm using 'keep' then!
#see current via:
#$ cat /sys/block/sda/queue/scheduler
#[none] kyber
#DISK_IOSCHED="kyber kyber kyber"
DISK_IOSCHED="keep keep keep"


# AHCI link power management (ALPM) for disk devices:
#   min_power, med_power_with_dipm(*), medium_power, max_performance.
# (*) Kernel >= 4.15 required, then recommended.
# Multiple values separated with spaces are tried sequentially until success.
# Default: <none>
#SATA_LINKPWR_ON_AC="med_power_with_dipm max_performance"
#SATA_LINKPWR_ON_BAT="med_power_with_dipm min_power"
#XXX: min_power prevents ESATA detection when plugged in and stops detecting it once set to "Good"(min_power) with powertop even when set back to "Bad"(on) afterwards and replugged and stuff like that.
#in other words once min_power gets set, it needs reboot to be able to detect ESATA plugged HDD again,
#so min_power will make hdparm -I /dev/sdb  report a * before `Device-initiated interface power management` and powertop Good before `Enable SATA link power management for host{0,1,2,3}`; the * is removed when Bad is in effect(either manually set after Good was set, or when max_performance is in effect)
#//XXX: changed AC from min_power to max_performance on 24 april 2018
#XXX: changed AC from max_performance to med_power_with_dipm(and batt from min_power to med_power_with_dipm) on 30 april 2018
#SATA_LINKPWR_ON_AC=max_performance #seems to have the same random read throughput as med_power_with_dipm
#SATA_LINKPWR_ON_AC=med_power_with_dipm
#SATA_LINKPWR_ON_BAT=med_power_with_dipm
#(XXX:does not apply to my T400 - manually tested with powertop to not affect me)To avoid filesystem corruption on btrfs formatted partitions, set:
#XXX: 03.03.2019 setting max_performance just to be sure the recent OS freezes aren't because of this!
SATA_LINKPWR_ON_AC=max_performance
SATA_LINKPWR_ON_BAT=max_performance

# Exclude host devices from AHCI link power management.
# Separate multiple hosts with spaces.
# Default: <none>
#SATA_LINKPWR_BLACKLIST="host1"

# Runtime Power Management for AHCI host and disks devices:
#   on=disable, auto=enable.
# EXPERIMENTAL ** WARNING: auto will most likely cause system lockups/data loss
# EXPERIMENTAL ** WARNING: auto may cause system lockups/data loss.
# Default: <none>
#AHCI_RUNTIME_PM_ON_AC=on
#AHCI_RUNTIME_PM_ON_BAT=on
#XXX: ok using 'on' here, since 26 Aug 2019 23'oclock(sharp), because `sudo powertop` calls 'auto' Good(which means powersaving enabled) and 'on' Bad which likely means it's on all the time, thus no power saving:
AHCI_RUNTIME_PM_ON_AC=on
AHCI_RUNTIME_PM_ON_BAT=on
#^ /sys/bus/pci/devices/0000:00:11.0/power/control = auto (0x010601, SATA controller, ahci)
#^    Bad           Runtime PM for PCI Device Advanced Micro Devices, Inc. [AMD] FCH SATA Controller [AHCI mode]
#
#old//XXX: going with off on this one (on 03.03.2019): actually there's no 'off' ??! but howtef is 'on'=disable!!?! going with default which should be none, thus commenting out:
#AHCI_RUNTIME_PM_ON_AC=off
#AHCI_RUNTIME_PM_ON_BAT=off

# Seconds of inactivity before disk is suspended.
# Note: effective only when AHCI_RUNTIME_PM_ON_AC/BAT is activated.
# Default: 15
#AHCI_RUNTIME_PM_TIMEOUT=15
#XXX: hopefully never:
AHCI_RUNTIME_PM_TIMEOUT=66000


# PCI Express Active State Power Management (PCIe ASPM):
#   default(*), performance, powersave, powersupersave.
# (*) keeps BIOS ASPM defaults (recommended)
# Default: <none>
PCIE_ASPM_ON_AC=default
PCIE_ASPM_ON_BAT=default
#XXX: now-removed Hint: needs kernel boot option pcie_aspm=force on some machines
#PCIE_ASPM_ON_AC=powersave
#PCIE_ASPM_ON_BAT=powersave
#^ even with powersave it still used BIOS defaults as per sudo tlp-stat: /sys/module/pcie_aspm/parameters/policy = [default] performance powersave powersupersave (using BIOS preferences) // this is on z575 archlinux (since I don't have tlp on i87k yet, not in official gentoo repo either)

# Set the min/max/turbo frequency for the Intel GPU.
# Possible values depend on your hardware. For available frequencies see
# the output of tlp-stat -g.
# Default: <none>
#INTEL_GPU_MIN_FREQ_ON_AC=0
#INTEL_GPU_MIN_FREQ_ON_BAT=0
#INTEL_GPU_MAX_FREQ_ON_AC=0
#INTEL_GPU_MAX_FREQ_ON_BAT=0
#INTEL_GPU_BOOST_FREQ_ON_AC=0
#INTEL_GPU_BOOST_FREQ_ON_BAT=0
#/sys/class/drm/card0/gt_min_freq_mhz         =   350 [MHz]
#/sys/class/drm/card0/gt_max_freq_mhz         =  1200 [MHz]
#/sys/class/drm/card0/gt_boost_freq_mhz       =  1200 [MHz]
#/sys/kernel/debug/dri/0/i915_ring_freq_table: 350 400 450 500 550 600 650 700 750 800 850 900 950 1000 1050 1100 1150 1200 [MHz]


# Radeon graphics clock speed (profile method): low, mid, high, auto, default;
# auto = mid on BAT, high on AC; default = use hardware defaults.
# Default: default
#RADEON_POWER_PROFILE_ON_AC=low
#RADEON_POWER_PROFILE_ON_BAT=low

# Radeon dynamic power management method (DPM): battery, performance.
# Default: <none>
#RADEON_DPM_STATE_ON_AC=thermal
#RADEON_DPM_STATE_ON_BAT=thermal
#XXX: thermal  here on z575 with patched kernel!

# Radeon DPM performance level: auto, low, high; auto is recommended.
# Note: effective only when RADEON_DPM_STATE_ON_AC/BAT is activated.
# Default: auto
#RADEON_DPM_PERF_LEVEL_ON_AC=auto
#RADEON_DPM_PERF_LEVEL_ON_BAT=auto
#RADEON_DPM_PERF_LEVEL_ON_AC=low
#RADEON_DPM_PERF_LEVEL_ON_BAT=low

# WiFi power saving mode: on=enable, off=disable; not supported by all adapters.
# Default: <none>
#WIFI_PWR_ON_AC=off
#WIFI_PWR_ON_BAT=on
WIFI_PWR_ON_AC=on
WIFI_PWR_ON_BAT=on

# Disable wake on LAN: Y/N.
# Default: N
WOL_DISABLE=Y
#disable? like this: ethtool -s enp1s0 wol d;


# Enable audio power saving for Intel HDA, AC97 devices (timeout in secs).
# A value of 0 disables, >=1 enables power saving (recommended: 1).
# Default: <none>
SOUND_POWER_SAVE_ON_AC=10
SOUND_POWER_SAVE_ON_BAT=1

# Disable controller too (HDA only): Y/N.
# Note: effective only when SOUND_POWER_SAVE_ON_AC/BAT is activated.
# Default: Y
SOUND_POWER_SAVE_CONTROLLER=Y

# Set to 1 to power off optical drive in UltraBay/MediaBay when running on
# battery. A value of 0 disables this feature (Default).
# Power off optical drive in UltraBay/MediaBay: 0=disable, 1=enable.
# Drive can be powered on again by releasing (and reinserting) the eject lever
# or by pressing the disc eject button on newer models.
# Note: an UltraBay/MediaBay hard disk is never powered off.
# Default: 0
BAY_POWEROFF_ON_AC=1
#^ 0 because that's where the SSD is! oh wait actually it only affects /dev/sr0
BAY_POWEROFF_ON_BAT=1
# Optical drive device to power off
# Default: sr0
BAY_DEVICE="sr0"

# Runtime Power Management for PCI(e) bus devices: on=disable, auto=enable.
# Default: <none>
#RUNTIME_PM_ON_AC=on
#wtf again with 'on' meaning disable!
RUNTIME_PM_ON_AC=auto
RUNTIME_PM_ON_BAT=auto

#XXX This option seems to have been removed:
## Runtime PM for *all* PCI(e) bus devices, except blacklisted ones:
##   0=disable, 1=enable
#RUNTIME_PM_ALL=1

# Exclude PCI(e) device adresses the following list from Runtime PM
# (separate with spaces). Use lspci to get the adresses (1st column).
# Default: <none>
#RUNTIME_PM_BLACKLIST="bb:dd.f 11:22.3 44:55.6"
#XXX: 01:00.0 is the network card, unless DIS (discrete gfx card) is enabled in bios, then it switches to 02:00.0 i believe
#ok, don't blacklist network card because it doesn't fail unless only when using NetworkManager
#RUNTIME_PM_BLACKLIST="01:00.0"

# Exclude PCI(e) devices assigned to the listed drivers from Runtime PM.
# Default when unconfigured is "amdgpu nouveau nvidia radeon" which
# prevents accidential power-on of dGPU in hybrid graphics setups.
# Use "" to disable the feature completely.
# Separate multiple drivers with spaces.
# Default: "amdgpu mei_me nouveau nvidia pcieport radeon", use "" to disable
# completely.
#RUNTIME_PM_DRIVER_BLACKLIST="amdgpu mei_me nouveau nvidia pcieport radeon"
#
#RUNTIME_PM_DRIVER_BLACKLIST="radeon nouveau"
#RUNTIME_PM_DRIVER_BLACKLIST="amdgpu nouveau nvidia radeon"
RUNTIME_PM_DRIVER_BLACKLIST=""

# Set to 0 to disable, 1 to enable USB autosuspend feature.
# Default: 0
USB_AUTOSUSPEND=1

# Exclude listed devices from USB autosuspend (separate with spaces).
# Use lsusb to get the ids.
# Note: input devices (usbhid) are excluded automatically
# Default: <none>
#USB_BLACKLIST="1111:2222 3333:4444"
#USB_BLACKLIST="0000:00:13.2"
#on Z575:
#00:13.2 USB controller: Advanced Micro Devices, Inc. [AMD] FCH USB EHCI Controller (rev 11)
USB_BLACKLIST="0000:00:1c.7 0000:04:00.0"
#on i87k, the keyboard is connected to the USB which in turn is connected to this pci interface:
#00:1c.7 PCI bridge: Intel Corporation 200 Series PCH PCI Express Root Port #8 (rev f0)
#found via lsusb then $ udevadm info /sys/bus/usb/devices/5-2/  and looking at devpath, then lspci
#also 0000:04:00.0 is the PCI card that has the USB port(s) for the keyboard! (mouse is connected elsewhere, for now)


# Bluetooth devices are excluded from USB autosuspend:
#   0=do not exclude, 1=exclude.
# Default: 0
USB_BLACKLIST_BTUSB=0

# Phone devices are excluded from USB autosuspend:
#   0=do not exclude, 1=exclude (enable charging).
# Default: 0
USB_BLACKLIST_PHONE=0

# Printers are excluded from USB autosuspend:
#   0=do not exclude, 1=exclude.
# Default: 1
USB_BLACKLIST_PRINTER=0

# WWAN devices are excluded from USB autosuspend:
#   0=do not exclude, 1=exclude.
# Default: 0
USB_BLACKLIST_WWAN=0

# Include listed devices into USB autosuspend even if already excluded
# by the blacklists above (separate with spaces). Use lsusb to get the ids.
# Default: <none>
#USB_WHITELIST="1111:2222 3333:4444"

# Set to 1 to disable autosuspend before shutdown, 0 to do nothing
# (workaround for USB devices that cause shutdown problems).
# Default: 0
USB_AUTOSUSPEND_DISABLE_ON_SHUTDOWN=1
#USB_AUTOSUSPEND_DISABLE_ON_SHUTDOWN=0

# Restore radio device state (Bluetooth, WiFi, WWAN) from previous shutdown
# on system startup: 0=disable, 1=enable.
# Note: the parameters DEVICES_TO_DISABLE/ENABLE_ON_STARTUP/SHUTDOWN below
#   are ignored when this is enabled.
# Default: 0
RESTORE_DEVICE_STATE_ON_STARTUP=0

# Radio devices to disable on startup: bluetooth, wifi, wwan.
# Separate multiple devices with spaces.
# Default: <none>
DEVICES_TO_DISABLE_ON_STARTUP="bluetooth wifi wwan"

# Radio devices to enable on startup: bluetooth, wifi, wwan.
# Separate multiple devices with spaces.
# Default: <none>
#DEVICES_TO_ENABLE_ON_STARTUP="wifi"
DEVICES_TO_ENABLE_ON_STARTUP=""

# Radio devices to disable on shutdown: bluetooth, wifi, wwan.
# (workaround for devices that are blocking shutdown).
# Default: <none>
#DEVICES_TO_DISABLE_ON_SHUTDOWN="bluetooth wifi wwan"
#^ let's not do that just in case it locks up!

# Radio devices to enable on shutdown: bluetooth, wifi, wwan.
# (to prevent other operating systems from missing radios).
# Default: <none>
#DEVICES_TO_ENABLE_ON_SHUTDOWN="wwan"
DEVICES_TO_ENABLE_ON_SHUTDOWN=""

# Radio devices to enable on AC: bluetooth, wifi, wwan.
# Default: <none>
#DEVICES_TO_ENABLE_ON_AC="bluetooth wifi wwan"
DEVICES_TO_ENABLE_ON_AC=""

# Radio devices to disable on battery: bluetooth, wifi, wwan.
# Default: <none>
#DEVICES_TO_DISABLE_ON_BAT="bluetooth wifi wwan"
#^ let's not, to avoid any potential lockups! eg. system crash/freeze

# Radio devices to disable on battery when not in use (not connected):
#   bluetooth, wifi, wwan.
# Default: <none>
#DEVICES_TO_DISABLE_ON_BAT_NOT_IN_USE="bluetooth wifi wwan"
#^ let's not, to avoid any potential lockups! eg. system crash/freeze

# Battery charge thresholds (ThinkPad only, tp-smapi or acpi-call kernel module
# required). Charging starts when the remaining capacity falls below the
# START_CHARGE_THRESH value and stops when exceeding the STOP_CHARGE_THRESH value.
# Main / Internal battery (values in %)
# Default: <none>
#START_CHARGE_THRESH_BAT1=75
#STOP_CHARGE_THRESH_BAT1=80
#START_CHARGE_THRESH_BAT0=40
#STOP_CHARGE_THRESH_BAT0=50
# Ultrabay / Slice / Replaceable battery (values in %)
# Default: <none>
#START_CHARGE_THRESH_BAT1=40
#STOP_CHARGE_THRESH_BAT1=50

# Restore charge thresholds when AC is unplugged: 0=disable, 1=enable.
# Default: 0
#RESTORE_THRESHOLDS_ON_BAT=1

# Battery feature drivers: 0=disable, 1=enable
# Default: 1 (all)
NATACPI_ENABLE=1
TPACPI_ENABLE=1
TPSMAPI_ENABLE=1
#TODO: remove these for i87k eventually, assuming they still can't be used to detect Eaton UPS

# ------------------------------------------------------------------------------
# tlp-rdw - Parameters for the radio device wizard
# Possible devices: bluetooth, wifi, wwan.

# Notes:
# - Parameters are disabled by default, remove the leading # to enable them
# - Separate multiple radio devices with spaces

# Default: <none> (for all parameters below)

# Radio devices to disable on connect.
#DEVICES_TO_DISABLE_ON_LAN_CONNECT="wifi wwan"
#DEVICES_TO_DISABLE_ON_WIFI_CONNECT="wwan"
#DEVICES_TO_DISABLE_ON_WWAN_CONNECT="wifi"

# Radio devices to enable on disconnect.
#DEVICES_TO_ENABLE_ON_LAN_DISCONNECT="wifi wwan"
DEVICES_TO_ENABLE_ON_LAN_DISCONNECT=""
#DEVICES_TO_ENABLE_ON_WIFI_DISCONNECT=""
#DEVICES_TO_ENABLE_ON_WWAN_DISCONNECT=""

# Radio devices to enable/disable when docked.
#DEVICES_TO_ENABLE_ON_DOCK=""
#DEVICES_TO_DISABLE_ON_DOCK=""

# Radio devices to enable/disable when undocked.
#DEVICES_TO_ENABLE_ON_UNDOCK="wifi"
#DEVICES_TO_DISABLE_ON_UNDOCK=""
