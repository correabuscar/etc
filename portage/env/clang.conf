
#XXX: clang fails with OOM with -j18 on i87k, and with -j12 now at 'ld' stage!
#[ebuild   R    ] sys-devel/clang-10.0.0:10::gentoo  USE="static-analyzer -debug -default-compiler-rt -default-libcxx -doc -test -xml" ABI_X86="(64) -32 (-x32)" LLVM_TARGETS="AMDGPU BPF NVPTX (X86) -AArch64 -ARC -ARM -AVR -Hexagon -Lanai -MSP430 -Mips -PowerPC -RISCV -Sparc -SystemZ -WebAssembly -XCore" PYTHON_SINGLE_TARGET="python3_7 -python3_6 -python3_8" 0 KiB
#^ that one with -j12, -j10, -j8, -j4  ooms(verb) even without le9h.patch
#looks like it's because it's using 30G in /var/tmp/portage (with -j1 at least) and that is in zram for me.

#MAKEOPTS="${MAKEOPTS} -j3"
#with -j4 got 19G, seen after oom (but no freezes with 705000K of le9h.patch)
#it works with -j2 got 30G (at bzip2 stage) in /var/tmp/portage
#it works with -j3 also!
#was with 32G, but now with 64G (trying):
MAKEOPTS="${MAKEOPTS} -j12"

#MAKEOPTS="${MAKEOPTS} -j1"
#seems to work with -j1 (stopped it at bzip stage, 30G used in /var/tmp/portage )

#not this one:
#PORTAGE_COMPRESS="xz"
#PORTAGE_COMPRESS_FLAGS="--threads=0 -z -9"
#this one:
#BINPKG_COMPRESS="xz"
#BINPKG_COMPRESS_FLAGS="--threads=0 -z -1"
